const EN_html = "<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <title>{title}</title>
    <style type="text/css">
        .page_layout {
            max-width: 21.001cm;
            margin-top: 1.499cm;
            margin-bottom: 2cm;
            margin-left: 1cm;
            margin-right: 1cm;
        }

        table#invoice {
            border: 0;
            border-style: none;
            width: 19cm;
            margin-left: 0cm;
            margin-top: 0cm;
            margin-bottom: 0cm;
            margin-right: auto;
            font-family: Times New Roman;
            font-size: 12pt;
        }

            table#invoice td:nth-child(1) {
                width: 9.25cm;
                background-color: transparent;
                padding: 0cm;
            }

            table#invoice td:nth-child(2) {
                width: 9.75cm;
                background-color: transparent;
                padding: 0cm;
            }

        @page {
        }

        table {
            border-collapse: collapse;
            border-spacing: 0;
            empty-cells: show
        }

        td, th {
            vertical-align: top;
            font-size: 12pt;
        }

        h1, h2, h3, h4, h5, h6 {
            clear: both;
        }

        ol, ul {
            margin: 0;
            padding: 0;
        }

        li {
            list-style: none;
            margin: 0;
            padding: 0;
        }

        * {
            margin: 0;
        }

        #invoice .header {
            font-size: 12pt;
            text-align: center !important;
        }

        #invoice td.blank_row {
            height: 12px !important; /* overwrites any other rules */
            background-color: #FFFFFF;
        }

        #invoice td.textline {
            font-size: 12pt;
            text-align: left !important;
        }
    </style>
</head>
<body class="page_layout" onload="window.print()">
    <table id="invoice" cellspacing="0" cellpadding="0">
        <tr>
            <td>
                <p class="header">
                    Invoice № {invoiceNo}
                    <br />from {invoiceDateLocal}
                    <br />according to the contract number {contractNo} from
                    <br />{contractDateLocal}
                </p>
            </td>
            <td>
                <p class="header">
                    Faktura Nr {invoiceNo}
                    <br />z {invoiceDatePol}
                    <br />w odniesieniu do umowy numer {contractNo} z dnia
                    <br />{contractDatePol}
                </p>
            </td>
        </tr>
        <tr>
            <td colspan="2" class="blank_row"></td>
        </tr>
        <tr>
            <td>
                <p class="textline">Bill: <b>{PENameLocal}</b></p>
                <p class="textline">Address: {streetLocal}, {postalCode}, {cityLocal}, {addressExtraLocal}{countryLocal}</p>
                <p class="textline">Tax number: {taxNumber}</p>
                <p class="textline">Registration numer: {registrationNumberLocal}</p>
            </td>
            <td>
                <p class="textline">Wystawiający: <b>{companyTypePol} {PENamePol}</b></p>
                <p class="textline">Adres: {streetPol}, {postalCode}, {cityPol}, {addressExtraPol}{countryPol}</p>
                <p class="textline">Nr. podatkowy: {taxNumber}</p>
                <p class="textline">Nr. rejestracyjny: {registrationNumber}</p>
            </td>
        </tr>
        <tr>
            <td colspan="2" class="blank_row"></td>
        </tr>
        <tr>
            <td>
                <p class="textline">Account:<br /><b>{bankAccountNo}</b></p>
            </td>
            <td>
                <p class="textline">Rachunek bankowy:<br /><b>{bankAccountNo}</b></p>
            </td>
        </tr>
        <tr>
            <td>
                <p class="textline">Beneficiary name: {beneficiaryName}</p>
                <p class="textline">Beneficiary address: {beneficiaryAddress}</p>
            </td>
            <td>
                <p class="textline">Beneficiary name: {beneficiaryName}</p>
                <p class="textline">Beneficiary address: {beneficiaryAddress}</p>
            </td>
        </tr>
        <tr>
            <td>
                <p class="textline">Bank name: {bankName}</p>
            </td>
            <td>
                <p class="textline">Bank name: {bankName}</p>
            </td>
        </tr>
        <tr>
            <td>
                <p class="textline">Bank address: {bankAddress}</p>
            </td>
            <td>
                <p class="textline">Bank address: {bankAddress}</p>
            </td>
        </tr>
        <tr>
            <td>
                <p class="textline">SWIFT/BIC: {swiftCode}</p>
            </td>
            <td>
                <p class="textline">SWIFT/BIC: {swiftCode}</p>
            </td>
        </tr>
        <tr>
            <td colspan="2" class="blank_row"></td>
        </tr>
        <tr style="display: {medBankDisplay};">
            <td>
                <p class="textline">Intermediary bank:</p>
                <p class="textline">Bank name: {medBankName}</p>
                <p class="textline">Bank address: {medBankAddress}</p>
                <p class="textline">SWIFT/BIC: {medBankSwiftCode}</p>
                <p class="textline">Acc. In correspondent bank: {medBankAccNo}</p>
            </td>
            <td>
                <p class="textline">Bank pośredniczący:</p>
                <p class="textline">Bank name: {medBankName}</p>
                <p class="textline">Bank address: {medBankAddress}</p>
                <p class="textline">SWIFT/BIC: {medBankSwiftCode}</p>
                <p class="textline">Acc. In correspondent bank: {medBankAccNo}</p>
            </td>
        </tr>
        <tr>
            <td colspan="2" class="blank_row"></td>
        </tr>
        <tr>
            <td>
                <p class="textline">
                    Customer: 123Soft sp. z o.o.
                    <br />Pl. Kilińskiego 2, 35-005 Rzeszów, Poland
                    <br />REGON: 365966808
                    <br />NIP: 5170378214
                </p>
            </td>
            <td>
                <p class="textline">
                    Wystawiono na: 123Soft sp. z o.o.
                    <br />Pl. Kilińskiego 2, 35-005 Rzeszów, Polska
                    <br />REGON: 365966808
                    <br />NIP: 5170378214
                </p>
            </td>
        </tr>
        <tr>
            <td>
                <p class="textline">{ReverseChargeLocal}</p>
            </td>
            <td>
                <p class="textline">{ReverseChargePol}</p>
            </td>
        </tr>
        <tr>
            <td colspan="2" class="blank_row"></td>
        </tr>
        <tr>
            <td>
                <p class="textline">
                    <span>Services:</span>
                </p>
                <p class="textline">
                    Software development services
                    <br />from <b>{startDateLocal}</b> to <b>{endDateLocal}</b>.
                    <br /><b>Amount: {amountLocal} {currency}.</b>
                </p>
            </td>
            <td>
                <p class="textline">Usługi:</p>
                <p class="textline">
                    Usługi, dotyczące rozwoju oprogramowania
                    <br />od <b>{startDatePol}</b> do <b>{endDatePol}</b>.
                    <br /><b>Kwota: {amountPol} {currency}.</b>
                </p>
            </td>
        </tr>
        <tr>
            <td colspan="2" class="blank_row"></td>
        </tr>
        <tr>
            <td>
                <p class="textline">Term of payment: {termOfPaimentLocal}</p>
            </td>
            <td>
                <p class="textline">Termin płatności: {termOfPaimentPol}</p>
            </td>
        </tr>
        <tr>
            <td>
                <p class="textline">Form of payment: bank transfer.</p>
            </td>
            <td>
                <p class="textline">Forma opłaty: przelew.</p>
            </td>
        </tr>
        <tr>
            <td colspan="2" class="blank_row"></td>
        </tr>
        <tr>
            <td>
                <p class="textline">
                    The payment under this invoice is simultaneously a confirmation of the provision of services, final settlements between the Parties and the fact that the Parties have no mutual claims and do not require the signing of additional documents.
                </p>
            </td>
            <td>
                <p class="textline">
                    Opłata tej faktury jest jednocześnie porwierdzeniem nadania usług, ostatecznych rozrachunków pomiędzy Stronami oraz tego, że Strony nie mają wzajemnych pretensji, i nie wymaga podpisania dodatkowych dokumentów.
                </p>
            </td>
        </tr>
        <tr>
            <td colspan="2" class="blank_row"></td>
        </tr>
        <tr>
            <td colspan="2" class="blank_row"></td>
        </tr>
        <tr>
            <td colspan="2" class="blank_row"></td>
        </tr>
        <tr>
            <td colspan="2">
                <p class="textline">
                    {signerNameLocal} ({signerNamePol})    ___________________
                </p>
            </td>
        </tr>
    </table>
</body>
</html>
";
